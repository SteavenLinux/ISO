#!/bin/bash

# Check if running as root
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 
   exit 1
fi

# Function to prompt for input with a default value and limit the choices to only two valid options
function prompt_de_choice() {
    local prompt_message="$1"
    local default_value="$2"
    local valid_choices=("SteavenLinux-plasma-meta" "SteavenLinux-gnome-meta")
    local user_input=""

    while true; do
        read -p "$prompt_message [$default_value]: " user_input
        user_input="${user_input:-$default_value}"  # Use default if no input is provided
        # Check if the input is one of the valid choices
        if [[ " ${valid_choices[*]} " == *" $user_input "* ]]; then
            echo "$user_input"
            break
        else
            echo "Invalid choice. Please enter either 'SteavenLinux-plasma-meta' or 'SteavenLinux-gnome-meta'."
        fi
    done
}


# fixing pacman
pacman-key --init
pacman-key --recv-keys 53A8F6EE177504E66BBBCA20C1F0637C80E7C321
pacman-key --lsign-key 53A8F6EE177504E66BBBCA20C1F0637C80E7C321

# Default Variables
DEFAULT_DISK="/dev/sda"
DEFAULT_EFI_PART="${DEFAULT_DISK}1"
DEFAULT_ROOT_PART="${DEFAULT_DISK}2"
DEFAULT_HOSTNAME="SteavenLinux"
DEFAULT_TIMEZONE="Africa/Cairo"
DEFAULT_LOCALE="en_US.UTF-8"
DEFAULT_LOCALE2="ar_EG.UTF-8"
DEFAULT_DE="SteavenLinux-plasma-meta"
DEFAULT_USERNAME="steavengameryt"
CACHYOS_REPOS="yes"

# Function to prompt for input with a default value
function prompt_input() {
    local prompt_message="$1"
    local default_value="$2"
    read -p "$prompt_message [$default_value]: " user_input
    echo "${user_input:-$default_value}"
}
# Function to prompt for yes/no input
function prompt_yes_no() {
    local prompt_message="$1"
    local default_value="$2"
    local user_input=""
    
    while true; do
        read -p "$prompt_message [$default_value]: " user_input
        user_input="${user_input:-$default_value}"  # Use default if no input is provided
        if [[ "$user_input" =~ ^(yes|no)$ ]]; then
            echo "$user_input"
            break
        else
            echo "Invalid choice. Please enter 'yes' or 'no'."
        fi
    done
}

# Prompt for user input
DISK=$(prompt_input "Enter the target disk" "$DEFAULT_DISK")
EFI_PART="${DISK}1"
ROOT_PART="${DISK}2"
HOSTNAME=$(prompt_input "Enter the hostname" "$DEFAULT_HOSTNAME")
TIMEZONE=$(prompt_input "Enter the timezone" "$DEFAULT_TIMEZONE")
LOCALE=$(prompt_input "Enter the locale" "$DEFAULT_LOCALE")
LOCALE2=$(prompt_input "Enter the secound locale" "$DEFAULT_LOCALE2")
DE=$(prompt_de_choice "Choose your Desktop Environment: SteavenLinux-plasma-meta or SteavenLinux-gnome-meta" "$DEFAULT_DE")
USERNAME=$(prompt_input "Enter your username" "$DEFAULT_USERNAME")
CACHYOS_REPOS=$(prompt_yes_no "Enable CachyOS repositories?" "yes")

# Prompt for root password before entering chroot
read -s -p "Enter the root password: " ROOT_PASSWORD
echo

# Prompt for user password before entering chroot
read -s -p "Enter the user password: " USER_PASSWORD
echo



# Function to print messages
function msg() {
    echo -e "\n=== $1 ===\n"
}

# Step 1: Connect to the internet
msg "Connecting to the internet"
# Use iwctl for Wi-Fi or ensure you are connected via Ethernet
# Uncomment and edit the following line to connect to Wi-Fi
# iwctl station device connect SSID

# Step 2: Update the system clock
msg "Updating the system clock"
timedatectl set-ntp true

# Step 3: Partition the disk
msg "Partitioning the disk"
parted $DISK mklabel gpt
parted $DISK mkpart primary fat32 1MiB 1021MiB
parted $DISK set 1 esp on
parted $DISK mkpart primary ext4 1021MiB 100%

# Step 4: Format the partitions
msg "Formatting the partitions"
mkfs.fat -F32 $EFI_PART
mkfs.ext4 $ROOT_PART

# Step 5: Mount the filesystems
msg "Mounting the filesystems"
mount $ROOT_PART /mnt
mkdir /mnt/boot
mount $EFI_PART /mnt/boot

# Step 6: Install base packages
msg "Installing base packages"
pacstrap -K -P /mnt SteavenSettings SteavenLinuxName base base-devel git

# Step 7: Generate fstab
msg "Generating fstab"
genfstab -U /mnt >> /mnt/etc/fstab

# Step 8: Change root into the new system
msg "Entering the new system"
arch-chroot /mnt /bin/bash <<EOF

pacman-key --init
pacman-key --recv-keys 53A8F6EE177504E66BBBCA20C1F0637C80E7C321
pacman-key --lsign-key 53A8F6EE177504E66BBBCA20C1F0637C80E7C321

if [[ "$CACHYOS_REPOS" == "yes" ]]; then
    pacman -Sy --noconfirm wget
    pacman-key --recv-keys F3B607488DB35A47 --keyserver keyserver.ubuntu.com
    pacman-key --lsign-key F3B607488DB35A47
    pacman -U --noconfirm 'https://mirror.cachyos.org/repo/x86_64/cachyos/cachyos-keyring-20240331-1-any.pkg.tar.zst' \
'https://mirror.cachyos.org/repo/x86_64/cachyos/cachyos-mirrorlist-18-1-any.pkg.tar.zst' \
'https://mirror.cachyos.org/repo/x86_64/cachyos/cachyos-v3-mirrorlist-18-1-any.pkg.tar.zst' \
'https://mirror.cachyos.org/repo/x86_64/cachyos/cachyos-v4-mirrorlist-6-1-any.pkg.tar.zst' \
'https://mirror.cachyos.org/repo/x86_64/cachyos/pacman-7.0.0.r6.gc685ae6-2-x86_64.pkg.tar.zst'
    wget -O /etc/pacman.conf https://github.com/SteavenLinux/SteavenInstaller/raw/refs/heads/main/pacman-cachyos.conf
fi


if [[ "$CACHYOS_REPOS" == "yes" ]]; then
    pacman -Syu --noconfirm base base-devel git linux-cachyos linux-cachyos-headers linux-firmware efibootmgr plymouth flatpak mkinitcpio
else
    pacman -Sy --noconfirm base base-devel git linux-zen linux-zen-headers linux-firmware efibootmgr plymouth flatpak mkinitcpio
fi

# Step 9: Set the timezone
msg "Setting the timezone"
ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime
hwclock --systohc

# Step 10: Localization
msg "Setting the locale"
echo "$LOCALE UTF-8" > /etc/locale.gen
echo "$LOCALE2 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=$LOCALE" > /etc/locale.conf

# Step 11: Set the hostname
msg "Setting the hostname"
echo "$HOSTNAME" > /etc/hostname

# Step 12: Set the root password
msg "Setting the root password"
echo "root:$ROOT_PASSWORD" | chpasswd

msg "Createing user"
useradd -m -G wheel -s /usr/bin/bash $USERNAME
echo '%wheel ALL=(ALL) ALL' | tee -a /etc/sudoers


msg "Setting the User password"
echo "$USERNAME:$USER_PASSWORD" | chpasswd

# Step 13: Install a bootloader
msg "Installing the bootloader"
pacman -S --noconfirm grub efibootmgr
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg

pacman -S --noconfirm $DE
systemctl enable sddm
systemctl enable NetworkManager
EOF